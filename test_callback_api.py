"""
–¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ "–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫" —á–µ—Ä–µ–∑ API
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "8332694363:AAF8W5IofpsVvjWSz1yWBciBBVP_rFrQrFY"
CHAT_ID = "-1002949858700"

def test_callback_button():
    """–¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ API"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    test_text = (
        "üß™ <b>–¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ callback –æ–±—Ä–∞–±–æ—Ç–∫–∏."
    )
    
    keyboard = {
        "inline_keyboard": [
            [
                {
                    "text": "–¢–µ—Å—Ç callback",
                    "callback_data": "test_callback"
                }
            ],
            [
                {
                    "text": "–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ",
                    "callback_data": "start_course"
                }
            ]
        ]
    }
    
    data = {
        "chat_id": CHAT_ID,
        "text": test_text,
        "parse_mode": "HTML",
        "reply_markup": json.dumps(keyboard)
    }
    
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    try:
        response = requests.post(url, data=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                message_id = result["result"]["message_id"]
                print(f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {message_id}")
                print("–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –≥—Ä—É–ø–ø–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ callback")
                return True
            else:
                print(f"–û—à–∏–±–∫–∞ API: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return False

def check_recent_callbacks():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ callback –¥–∞–Ω–Ω—ã–µ"""
    
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates"
    
    try:
        response = requests.get(url, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                updates = result["result"]
                print(f"–ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                
                callbacks = []
                for update in updates:
                    if "callback_query" in update:
                        callback = update["callback_query"]
                        callbacks.append({
                            "data": callback["data"],
                            "from": callback["from"]["first_name"],
                            "message_id": callback["message"]["message_id"]
                        })
                
                if callbacks:
                    print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ callback –¥–∞–Ω–Ω—ã–µ:")
                    for cb in callbacks[-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                        print(f"  - {cb['data']} –æ—Ç {cb['from']} (—Å–æ–æ–±—â–µ–Ω–∏–µ {cb['message_id']})")
                else:
                    print("Callback –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
                return callbacks
            else:
                print(f"–û—à–∏–±–∫–∞ API: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return []
        else:
            print(f"HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return []

if __name__ == "__main__":
    print("=" * 60)
    print("–¢–ï–°–¢ CALLBACK –ö–ù–û–ü–û–ö")
    print("=" * 60)
    
    print("\n1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    test_callback_button()
    
    print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ callback –¥–∞–Ω–Ω—ã–µ...")
    check_recent_callbacks()
    
    print("\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É @learncoding_team")
    print("2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–¢–µ—Å—Ç callback' –∏–ª–∏ '–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ'")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ callback –¥–∞–Ω–Ω—ã—Ö")
