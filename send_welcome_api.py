"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "8332694363:AAF8W5IofpsVvjWSz1yWBciBBVP_rFrQrFY"
CHAT_ID = "-1002949858700"

def send_welcome_message():
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API"""
    
    welcome_text = (
        "üéì <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É—Ä—Å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!</b>\n\n"
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ HTML, CSS –∏ JavaScript.\n\n"
        "üìö <b>–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:</b>\n"
        "‚Ä¢ 11 –ø–æ–¥—Ä–æ–±–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ —Å —Ç–µ–æ—Ä–∏–µ–π –∏ –ø—Ä–∞–∫—Ç–∏–∫–æ–π\n"
        "‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –∏ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n"
        "‚Ä¢ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–Ω—Ç–æ—Ä–∞\n\n"
        "üöÄ <b>–ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b>\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫."
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = {
        "inline_keyboard": [
            [
                {
                    "text": "üéì –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
                    "callback_data": "start_course"
                }
            ],
            [
                {
                    "text": "üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω—Ç–æ—Ä–æ–º",
                    "url": "https://t.me/vadzim_belarus"
                }
            ],
            [
                {
                    "text": "üåê –°–∞–π—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è",
                    "url": "https://vadzim.by"
                }
            ]
        ]
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    data = {
        "chat_id": CHAT_ID,
        "text": welcome_text,
        "parse_mode": "HTML",
        "reply_markup": json.dumps(keyboard)
    }
    
    # URL API
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    try:
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        response = requests.post(url, data=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                message_id = result["result"]["message_id"]
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {message_id}")
                
                # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                pin_url = f"https://api.telegram.org/bot{BOT_TOKEN}/pinChatMessage"
                pin_data = {
                    "chat_id": CHAT_ID,
                    "message_id": message_id
                }
                
                pin_response = requests.post(pin_url, data=pin_data, timeout=30)
                if pin_response.status_code == 200:
                    print("–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!")
                else:
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
                
                return True
            else:
                print(f"–û—à–∏–±–∫–∞ API: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.Timeout:
        print("–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
        return False
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def send_first_lesson():
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ —á–µ—Ä–µ–∑ API"""
    
    lesson_text = (
        "üìö <b>–£—Ä–æ–∫ 1. –û—Å–Ω–æ–≤—ã HTML</b>\n\n"
        "üí° <b>–¢–µ–æ—Ä–∏—è:</b>\n"
        "HTML (HyperText Markup Language) ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü.\n\n"
        "üîπ –û–°–ù–û–í–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:\n"
        "–ö–∞–∂–¥—ã–π HTML-–¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å <!DOCTYPE html> –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç:\n"
        "- <html> ‚Äî –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç\n"
        "- <head> ‚Äî –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ\n"
        "- <body> ‚Äî –≤–∏–¥–∏–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n\n"
        "üìù <b>–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ:</b>\n"
        "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—É—é HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –∞–±–∑–∞—Ü–µ–º.\n\n"
        "‚úÖ <b>–°–¥–∞—ë–º –î–ó:</b> –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ–π –∂–µ –≥—Ä—É–ø–ø–µ\n\n"
        "üéØ <b>–£—Ä–æ–≤–µ–Ω—å:</b> HTML/CSS\n"
        "üìÖ <b>–î–∞—Ç–∞:</b> 15.01.2025"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = {
        "inline_keyboard": [
            [
                {
                    "text": "üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω—Ç–æ—Ä–æ–º ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
                    "url": "https://t.me/vadzim_belarus"
                }
            ],
            [
                {
                    "text": "üìö –í—Å–µ —É—Ä–æ–∫–∏ –∫—É—Ä—Å–∞",
                    "url": "https://t.me/learncoding_team"
                }
            ],
            [
                {
                    "text": "üåê –°–∞–π—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è",
                    "url": "https://vadzim.by"
                }
            ],
            [
                {
                    "text": "üìñ –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫",
                    "callback_data": "next_lesson_1"
                }
            ]
        ]
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    data = {
        "chat_id": CHAT_ID,
        "text": lesson_text,
        "parse_mode": "HTML",
        "reply_markup": json.dumps(keyboard)
    }
    
    # URL API
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    try:
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫...")
        response = requests.post(url, data=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                message_id = result["result"]["message_id"]
                print(f"–£—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! ID: {message_id}")
                return True
            else:
                print(f"–û—à–∏–±–∫–∞ API: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("–û–¢–ü–†–ê–í–ö–ê –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø")
    print("=" * 60)
    
    print("\n1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    welcome_ok = send_welcome_message()
    
    if welcome_ok:
        print("\n2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫...")
        lesson_ok = send_first_lesson()
        
        if lesson_ok:
            print("\n–í–°–ï –°–û–û–ë–©–ï–ù–ò–Ø –û–¢–ü–†–ê–í–õ–ï–ù–´!")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä—É–ø–ø—É @learncoding_team")
        else:
            print("\n–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ä–æ–∫–∞")
    else:
        print("\n–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
